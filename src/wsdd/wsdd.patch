Only in wsdd_god: .depend
Binary files wsdd/.git/index and wsdd_god/.git/index differ
diff -upr wsdd/Makefile wsdd_god/Makefile
--- wsdd/Makefile	2019-01-25 14:43:10.725532289 +0100
+++ wsdd_god/Makefile	2019-01-25 12:25:06.678016550 +0100
@@ -35,9 +35,9 @@ CFLAGS           += -DDAEMON_NO_CLOSE_ST
 CFLAGS           += -I$(COMMON_DIR)
 CFLAGS           += -I$(GENERATED_DIR)
 CFLAGS           += -I$(GSOAP_DIR) -I$(GSOAP_PLUGIN_DIR) -I$(GSOAP_IMPORT_DIR)
-CFLAGS           += -O2  -Wall  -pipe
+CFLAGS           += -lm -Os  -Wall  -pipe
 
-GCC              ?= gcc
+GCC              ?= arm-hisiv300-linux-gcc
 
 
 
@@ -216,7 +216,7 @@ define build_gsoap
     # get archive
     if [ ! -f SDK/gsoap.zip ]; then \
         mkdir -p SDK; \
-        wget -O ./SDK/gsoap.zip.tmp "https://sourceforge.net/projects/gsoap2/files/gsoap-2.8/gsoap_2.8.66.zip/download" && \
+        wget -O ./SDK/gsoap.zip.tmp "https://sourceforge.net/projects/gsoap2/files/oldreleases/gsoap_2.8.66.zip/download" && \
         mv ./SDK/gsoap.zip.tmp ./SDK/gsoap.zip; \
     fi
 
diff -upr wsdd/src/wsdd.c wsdd_god/src/wsdd.c
--- wsdd/src/wsdd.c	2019-01-25 14:43:10.725532289 +0100
+++ wsdd_god/src/wsdd.c	2019-01-25 12:21:18.860889936 +0100
@@ -332,16 +332,18 @@ void init_gsoap()
     // Note that this IP_ADD_MEMBERSHIP option must be
     // called for each local interface over which the multicast
     // datagrams are to be received.
-    struct ip_mreqn mcast;
+    struct ip_mreq mcast;
     mcast.imr_multiaddr.s_addr = inet_addr(WSDD_MULTICAST_IP);
-    if( get_addr_of_if(wsdd_param.if_name, AF_INET, &mcast.imr_address) != 0 )
-    {
-        daemon_error_exit("Cant get addr for interface error: %m\n");
-    }
+    //if( get_addr_of_if(wsdd_param.if_name, AF_INET, &mcast.imr_address) != 0 )
+    //{
+        //daemon_error_exit("Cant get addr for interface error: %m\n");
+    //}
 
-    setsockopt(soap_srv->master, IPPROTO_IP, IP_MULTICAST_IF, &mcast.imr_address.s_addr, sizeof(struct in_addr));
+    //setsockopt(soap_srv->master, IPPROTO_IP, IP_MULTICAST_IF, &mcast.imr_address.s_addr, sizeof(struct in_addr));
 
-    if(setsockopt(soap_srv->master, IPPROTO_IP, IP_ADD_MEMBERSHIP, (char *)&mcast, sizeof(mcast)) != 0 )
+	
+	mcast.imr_interface.s_addr = htonl(INADDR_ANY);
+    if(setsockopt(soap_srv->master, IPPROTO_IP, IP_ADD_MEMBERSHIP, &mcast, sizeof(mcast)) != 0 )
     {
         daemon_error_exit("Cant adding multicast group error: %m\n");
     }
